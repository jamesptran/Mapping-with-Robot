float speedcalibration = 1.016; //=motorA / motorB

int ultrasonic(){
    int DistanceInCm;
    SetSensorLowspeed(IN_2);
    DistanceInCm = SensorUS(IN_2);
    return DistanceInCm;
}

void TurnRight(){
    Off(OUT_AB);
    OnFwd(OUT_B, 50*speedcalibration);
    Wait(500);
    Off(OUT_AB);
    OnFwd(OUT_A, 50);
    Wait(500);

    OnFwd(OUT_B, 60*speedcalibration);
    OnFwd(OUT_A, 60);
}

void TurnLeft(){
    Off(OUT_AB);
    OnFwd(OUT_A, 50);
    Wait(500);
    Off(OUT_AB);
    OnFwd(OUT_B, 50*speedcalibration);
    Wait(500);

    OnFwd(OUT_B, 60*speedcalibration);
    OnFwd(OUT_A, 60);
}

void StopTheMotor(){
    Off(OUT_AB);
}

void Fwd(){
    OnFwd(OUT_B, 60*speedcalibration);
    OnFwd(OUT_A, 60);
}

task main(){
    int middledistance = 20;
    int far = 23;
    int close = 17;
    int toofar = 50;
    do {
        int USreading = ultrasonic();

        if((USreading> close) && (USreading<far)){
            Fwd();
        }

        if (USreading < close) {
            TurnLeft();
        }
        if (USreading > far && USreading < toofar) {
            TurnRight();
        }
        if (USreading > toofar) {
            StopTheMotor();
            break;
        }
        Wait(1);
    } while (true);
}
